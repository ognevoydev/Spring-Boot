{
  "id": "quisell",
  "realm": "quisell",
  "displayName": "Quisell",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 2592000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 7776000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 7776000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "6db3d553-e6a1-44fe-84f6-44af1b49d153",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "quisell",
        "attributes": {}
      },
      {
        "id": "0e43418b-c95b-40ed-946e-fb56de2a58dd",
        "name": "default-roles-quisell",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "quisell",
        "attributes": {}
      },
      {
        "id": "bee20f18-b5cb-471d-92b5-9aa18a05fe2a",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "quisell",
        "attributes": {}
      },
      {
        "id": "d136477a-ab4c-4182-9e14-9cae11670ef8",
        "name": "manager",
        "composite": false,
        "clientRole": false,
        "containerId": "quisell",
        "attributes": {}
      },
      {
        "id": "f698bcd8-fce3-4aae-b45e-9a457610b8b1",
        "name": "user",
        "composite": false,
        "clientRole": false,
        "containerId": "quisell",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "b40309af-179e-4d24-bf50-79042feebb33",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "c0addeb5-9d64-4b67-abb9-f6aef378c597",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "299390ae-5eea-4e85-a65d-6af9b54444e5",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "3cd6d4b6-353b-4ef6-9e85-04cf13df7c13",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "64c3300f-a2b1-4aae-8029-05ee048eea17",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "96ca3257-2e05-4f4c-85d5-5d79c2cb8ec5",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "1f2d8004-534a-460f-9ce1-16632abaa8a2",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "2fd7ced0-4348-4929-ad67-fd2e2480029b",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "b70d083e-55f7-43dd-8c57-cd987bb56ae9",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "71117c7c-3b7c-4b09-8032-9f4b5f308d29",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "a4e03380-b96d-4908-8f56-66e5675a873b",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "c5952dc0-ad8a-46b8-8415-e85b0569a558",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "0c12e9cf-ca7d-4048-b30b-3a0958318b95",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "0cc49c13-2861-4cfd-8f79-801bcfb9234b",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "ece4d505-dfdd-42f4-9a7b-7bef74e92a3c",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "e074129b-002f-46a5-bd84-ce33964ca9fa",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "8fd27538-81ad-4887-8089-13ff2af9fa4c",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-authorization",
                "manage-clients",
                "manage-identity-providers",
                "view-realm",
                "query-realms",
                "query-users",
                "query-clients",
                "view-clients",
                "create-client",
                "view-identity-providers",
                "manage-users",
                "view-users",
                "manage-realm",
                "impersonation",
                "query-groups",
                "view-authorization",
                "view-events",
                "manage-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "3b8577d2-8045-49b0-88de-cbb152e8e56f",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        },
        {
          "id": "8a477cd3-5241-406a-a0e3-1d4a867df965",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "quisell-backend": [
        {
          "id": "ba552fbf-7fa2-4b8e-85c5-a3cf8d7fd38a",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "8a1834a2-7cc9-4741-a5b8-476d761d592f",
          "attributes": {}
        }
      ],
      "quisell-frontend": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "f88edf62-b0a5-4f92-bd01-cb341e8ab841",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "0b7b6678-1fd9-4f17-a79b-a29a32c194ae",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "9ff0dcd9-a057-4bd7-9c46-7fa33f1045ad",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        },
        {
          "id": "adfe51e5-14b5-484a-87cb-a6637698876a",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        },
        {
          "id": "cc3abace-900d-40f6-a6fa-84d3cdfe40bb",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        },
        {
          "id": "8e447220-2664-404d-b16b-b85e7636fada",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        },
        {
          "id": "065e351a-9de2-4ecf-b79c-bf7e24f2404c",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        },
        {
          "id": "777c1681-7b35-4033-8b26-cdb148fb617d",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        },
        {
          "id": "9da969d0-a27b-4a89-83ef-a2b7db584272",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "011861c1-e8c7-40b4-b518-21452a861a2f",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "0e43418b-c95b-40ed-946e-fb56de2a58dd",
    "name": "default-roles-quisell",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "quisell"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "4f1f3215-a564-41fb-9fd9-d699d56747e9",
      "createdTimestamp": 1676026123306,
      "username": "service-account-quisell-backend",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "quisell-backend",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "clientRoles": {
        "realm-management": [
          "query-users",
          "manage-users"
        ],
        "quisell-backend": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "client": "quisell-backend",
      "roles": [
        "uma_authorization"
      ]
    },
    {
      "client": "quisell-frontend",
      "roles": [
        "manager",
        "user"
      ]
    },
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "realm-management": [
      {
        "client": "quisell-backend",
        "roles": [
          "manage-users",
          "query-users"
        ]
      }
    ],
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "011861c1-e8c7-40b4-b518-21452a861a2f",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/quisell/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/quisell/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cee6bc79-8e43-46c2-a3d3-418106fa1b65",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/quisell/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/quisell/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "d741d24d-35e6-411a-afee-899ca661d0bf",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9f5ccec1-4d9b-4849-94de-8c4a294d8536",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0b7b6678-1fd9-4f17-a79b-a29a32c194ae",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8a1834a2-7cc9-4741-a5b8-476d761d592f",
      "clientId": "quisell-backend",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "xg0ub2mu7xINSOIMIGqmnH8m8xGTnc4q",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e2352223-80cf-4ed3-9507-6eda5988f782",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "024efabf-6702-45ef-8ed6-e82e8cbddc95",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f332decf-68ef-421e-9883-8a5b6e2770e7",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "022c56d6-3001-42a1-bde6-6f51c6c651a3",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": [],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "posts",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "a92883a1-4dbd-4f3f-a686-949561d2ce65",
            "uris": [
              "/posts/*"
            ],
            "scopes": [
              {
                "name": "DELETE"
              },
              {
                "name": "GET"
              },
              {
                "name": "POST"
              },
              {
                "name": "PUT"
              }
            ]
          }
        ],
        "policies": [
          {
            "id": "8fbb0ebe-1638-4e47-a1be-db77f9b6cd11",
            "name": "user-policy",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"user\",\"required\":true}]"
            }
          },
          {
            "id": "1fd8353c-b327-4a4e-a134-9ce0836804e6",
            "name": "manager-policy",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"manager\",\"required\":true}]"
            }
          },
          {
            "id": "035dd5e0-a546-49e8-a8f3-cbace58fb5dd",
            "name": "user-read-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"posts\"]",
              "scopes": "[\"GET\"]",
              "applyPolicies": "[\"user-policy\"]"
            }
          },
          {
            "id": "cbcd171d-873e-4a21-b677-9e1594ee6fc6",
            "name": "manager-read-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"posts\"]",
              "scopes": "[\"GET\"]",
              "applyPolicies": "[\"manager-policy\"]"
            }
          },
          {
            "id": "3e76e1f0-5ddf-4776-9ba3-84d2065f9aa0",
            "name": "user-delete-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"posts\"]",
              "scopes": "[\"DELETE\"]",
              "applyPolicies": "[\"user-policy\"]"
            }
          },
          {
            "id": "cfb96847-1978-4e82-8705-f6661312b492",
            "name": "user-replace-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"posts\"]",
              "scopes": "[\"PUT\"]",
              "applyPolicies": "[\"user-policy\"]"
            }
          },
          {
            "id": "d06eb303-8f2c-4d3d-8938-c4127f7a1529",
            "name": "user-create-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"posts\"]",
              "scopes": "[\"POST\"]",
              "applyPolicies": "[\"user-policy\"]"
            }
          }
        ],
        "scopes": [
          {
            "id": "198e1177-2e2e-4273-b8b4-2d547b5143f7",
            "name": "GET"
          },
          {
            "id": "4a60bbe2-06c0-4737-89f8-4d4380f16ae1",
            "name": "POST"
          },
          {
            "id": "fad278ac-0627-4de1-9d44-ba8541e6b9a9",
            "name": "DELETE"
          },
          {
            "id": "bafdc122-8097-486c-bd0f-dccbe4269a58",
            "name": "PUT"
          }
        ],
        "decisionStrategy": "AFFIRMATIVE"
      }
    },
    {
      "id": "35fa351d-1bbe-418d-bd6f-8bf18ea82eac",
      "clientId": "quisell-frontend",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://quisell.ru/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "90921a36-e44f-4d3f-94c7-110a142f2d44",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "6e7bd48e-1ea4-49ec-8929-5595f13c3a70",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f756a2a2-4fd9-4329-99eb-1d8985f53233",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/quisell/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/quisell/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1ab57274-a2e6-45f6-b40d-ef8d4eceba85",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "8ebd7cfe-5080-45f2-a345-bcdfaa9acd1e",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "7e3665c1-a8d5-42f5-ae2f-be273073dce7",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "2fda54df-e734-452d-ac93-ec69ef71a082",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9a35c0a3-fa29-44b7-a8c9-04521560d261",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "849a5676-bdd8-462b-ae4b-3df40cf571f8",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "9df16f68-6c23-41e0-b6a9-2420ab2f0bda",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "e7ad67d6-30a0-40b9-9fe8-6ffbf472b5c2",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "5171af8e-9903-4dfd-bb47-062003159a8f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "38723690-9972-4c52-9f3b-18fd32afbbdd",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "55c67550-1a0b-4b6b-9caf-c6e04ff6f6df",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "200bd241-98d5-4541-b987-0fe9ba3187d1",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0f0e2ed7-c04a-417e-8405-1041a6451ee1",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "af8e5952-fbdc-4180-a20d-d07d04fa1bd6",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "20c3599a-41a7-4f36-8264-5dfaed40dedb",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d5bf52eb-2a90-4d99-bcd4-96016e0b2db6",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3e370044-a293-4549-bf49-f6cbfc2694c5",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae4a42e8-5ad5-4295-964d-6c27ee606317",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0d959306-0be4-4a66-9e01-338d30d5c0a2",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2f3057f3-6d52-47bc-91c7-6d4fa83b3856",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5a758a93-1a21-4470-8a43-c273f7fd43fe",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3734c79-af3f-4d1b-862d-adaa4c1a2145",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "ec56158c-6c27-47d2-b5ef-2f4f3abdd558",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d6405808-dde5-4bbe-857d-c60e14886e37",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e5166240-459d-4fee-ad2f-2cc98309a7ed",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6bebbf9a-f21e-424d-9b2c-74c29af66049",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "58a298d2-ec99-4c6c-b60d-ff7c47ec9805",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "548fefc6-48d3-499a-8f6c-c6bead691c62",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e1369790-a8fc-42f0-b9f7-edb8bab0b442",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4896c9fd-dd58-4683-b9a1-5027d8370df4",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "e8096424-2ce3-463d-b851-f4e57266efc9",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "a47d033b-2cf3-43bc-9c61-f192275aa9e9",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "cd040ffd-f1f8-46eb-aa86-19ffb81b021d",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "80580226-10f6-472b-8c31-ebe118b7d6e1",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "85f8729e-f542-4d5c-8e4f-6e469a4a9a4b",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0f68dc79-6b42-480e-9c8d-63b842eaeb60",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [],
  "defaultOptionalClientScopes": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "a9336beb-4717-4110-ab06-5cf42c4157b6",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "daba85f3-9961-41e8-914b-233d721b557c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "736f023c-3c3e-48e1-b1e2-7a969eedd27b",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "f0547a84-dce6-4a8e-bd56-4f2798b72176",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "eff9f439-6600-4049-8f1d-0b2252eac9a2",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "b287f7ed-fa24-4983-9191-c5e5bb57a30d",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "f8ef54bb-a6e2-4465-988a-f8832a2b5b87",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "ec00bfdd-6d03-4537-a7e0-8135b1307162",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "8e57e520-8924-4b54-9511-e377f781bc27",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "1c69bc75-05d0-4abc-b468-d5bd4d98527e",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "0c37c54e-4c5a-4ade-abe3-8f94039b6a91"
          ],
          "secret": [
            "Zn7MeTS747xzo5yNXEnpWE-a6fa77Hty-z5hICmQDyaAj0CtP4PKDHu1wflNymLOj72K_dhCq4c_g599y3oliw"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "3da7f7d4-082f-4942-9544-cfed47aac716",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAhh0iywAU8U8lPg3oUEDkRYAO9Nt5WTwfHHB/LKhHupUqdNhH4m+BRJ/NC12x+sX94wl80LQTVNc2FIC/g+R8hUsOG+CiMDySV7q4lQ2+qGMHa5iOX8TwcqAKOOSUDFkCU9iwjuikDLvhiMCHPhCB6avtsE6lS6SBGO7y4g3ObjErUivYltvh71GGAsSnixVAOdI3Bs/P020a56aV+Wdj/Ul2uMoBpEd3rY4btctobaUsdfmGGh3G1/SlHqgIcaaIDCykW8zQhHYHYDHPZRoYlN9YrqAWRSSyVIQZ/1U3vVNOLWo6Oue1B29EpdqND3NcjEbZK4qC4hA5HuvGivKbvQIDAQABAoIBAC+aW+UuLEDS1OdHzHPf9KZuo+BpnpL78hcIHzvcp0kk9SLwOeO3rGyNRByKr0fRyyIxFeqGYG42zW1NnazVBxXQ5Dsk6qywc0lMb4QIkun17IZWagK4RpiJEdfL2njfhyH3wgOXs9MJRS5jGB4BgftNGVsBL07AH0qYVgHC4MjfizW9XaXvItPrj9gsY7NxSCDXVNOKnHAsGEFswUGLwTbngPBiN9Oe79D/JpnFZWL7Ctf2Ra21tszhGXDgQFuUXyXNGVxH0GQRbsshZMqpDdLendxDeZFlOCEENxXeyqaEy/cALKn5M5fUHcJbZKM7oiOza46EvO1Z8aQFyau3vsECgYEAxQBXey9rtRxPUGjJhS2yted7nBbggYWjqdwegNgbvt2khMTQIluZ2gP90XRTVm09Jg1rLo3jH3w6fLhgcGZ1Ve2SwPlf+8ab0mVPzVmw2DnCli2gAq11Hu8cZC8i8HH2A0lXw6I5le64iI07IgJSur56zOvCgPWHC4JOgcSnOpUCgYEArkdYrLE6xSUUhj/kEaky9YgdctM9YEcLwOGRsYflShq6aCByIiFnV/qdyWXwm23FIT/vXd1owmb5uDbOonTVNRbI6T750hRl8Jw8tnBq2lFVwg3UGiRYEZPjAoopVi5LjAsM8UHfpilVrK8SRzY9S9FNMIXFMkHcDrW79ERUuokCgYAg92CsTZAxm44uP4rRjYclZ5pI0Y86PXnY1+wG1aM2+nIogaLuzPNfB2H3Jgc4JEmiT4aLINVMFIbZDiWdSZgDDCGNx21nfaHfwHJtQ8ATPv8wEGyBZjN+PLc8kKLBJ+DqReC47THDxFH/D9tAYrEjbPKxzhYbbHrv0xt+HcF6TQKBgBmQM4yZLoKubrVGd+CzTdtADPnDzHPr1+iB7cn5ogNdqkwNvlANUEhSZYSeJE3YKxs2cpj1GiGx0x1XRLYFpyRzZCL6btCG13EUqb8k/DdryMV/G8Z94EErzReZRnjyr3gqQsq8m96Wn4+F2ouBhDozyDu+028MxAeQVrJ8t2TpAoGAFf6B53jKOh4nIFn29BSQrniAoxH/k+1RP30FH7PDWkHXXPRyVC/rdPdArppTOw380/JYkvz7SdjbLX52bhJG8gAgy2QSpaDS96i6sYkYhudmPobV/mpKyu9qCEzU7fInGjJy2uybQ2suU0B3jwUVGiIWV+o8XqQ2XVOzvS6r2uc="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGGOu/ycjANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWlzZWxsMB4XDTIzMDIxMDEwNDU0OVoXDTMzMDIxMDEwNDcyOVowEjEQMA4GA1UEAwwHcXVpc2VsbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIYdIssAFPFPJT4N6FBA5EWADvTbeVk8HxxwfyyoR7qVKnTYR+JvgUSfzQtdsfrF/eMJfNC0E1TXNhSAv4PkfIVLDhvgojA8kle6uJUNvqhjB2uYjl/E8HKgCjjklAxZAlPYsI7opAy74YjAhz4Qgemr7bBOpUukgRju8uINzm4xK1Ir2Jbb4e9RhgLEp4sVQDnSNwbPz9NtGuemlflnY/1JdrjKAaRHd62OG7XLaG2lLHX5hhodxtf0pR6oCHGmiAwspFvM0IR2B2Axz2UaGJTfWK6gFkUkslSEGf9VN71TTi1qOjrntQdvRKXajQ9zXIxG2SuKguIQOR7rxorym70CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEASJOT8KPA0ypWyWBq2xXtFnuL1a98AqoRQNnYv0Ks2/29F7tevzX8ADnhaWUePk7kGgtNNbabniD1ZrxZaOUvt4wAUwzCGaZr7XX8y8qIhe9bcprO6xNjXXzj96YtO1+rffymkAowuB3N2+MtdG3a//wokDQE2qeFWVPZsXQnPuZE8hGDQ6Ti5XSyOZbntr/OFcyxQbz9klHOSYTfCQ1OzHKPaq95QfNsDgh/GBxcpXAoYBnbRM8vKkpxtt2O3R3lfxI2xIETdOr89a4cgZyaQvq/asC4GFLGhXVz49/NEiWS0M1zirFM1oReL62pLhsLYMOzezy8yE0jS5TFaZOKQA=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "a21c22fa-ab48-47c2-b971-e7400100241f",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAo0WU2b9g1ngmCCFohVf5ZLC5hvI4y7ga5F0RuswWoDD2uSrIEhX+zRhrWLfR8TO423rD/xylnwwE3o7STjOTI96GMDs1NkfvyvtbMRvqrhUmxRO8KagV3pqz4+CpB/9yBTP8oHP/9Wz5X9JpXnFrN0KmuC6fxYvNzyoEsgJRppMjyU9uxnml0DnSVcYP2K8vWkRCvMewuNmj0m/9G0YawBUrkZUgkxnSpJyncTJNRMKYAljxcWBGw9VD8JxjamgrEvM6YcT690bD4zYkr/PouZ2nLW73/FlhvVOnVSx2kI+0UEDGsXy/sUaruaPWk2Bhj03CvQ9ui39BYPY2jKEyBwIDAQABAoIBADQnF8LuNLqNKmjScxaU4V7ebITEfovkRQLJD87BPkDxIv5Gwh201O0ibberD+6h/NxuvIiS1/yT1EJbEKZWJxwACpEBeJ/cHqaR37EyH6Z3ryiogyQzQrkWZXvW2Wdqmzs6Penq48m7g3SuO2YliH/gVGzkx7hMTfNsko9h2j8AoHtYNErYLj85btPA1C5rHZP2i+d4lX2W4hp8ybPibLIFTlrRpnP8JmSDIiYGLr78sg2m0gov9b4lSUYR2jbduBHiXsPO2875IOmbLCOL9oIxDe0z/Oc/hHBEJVbOQ5Bfli3t77QhNXfIOL1C3W0lgUHoNSPY2Wz4f65GR8T7+5ECgYEA89NxMUx3dGNIKQNJjyppe+qD+mwJMgpIkO52xuxwrHjss4u5J7NJHDsfekpZimzDmauFOAhZlQQun3CU3MSRFaE12Va7ib8HzcH5g7nMlEXxh47aIZuP8q3hT7wAUDuRwkztYdE5f6NgadiD6g895jwTY2FpKOyezOOyEB/L9uMCgYEAq2yBLr17XkOW+J/ZwtkuDN2W80zAZAuTQRlan/RtSEPbM7XuWVDgXGYxZeE2FS3NCbUy938QCb8f754yUtygYneBpSftGa/uWZD7y1BNzSY4Q++o/UZ9Uy5aq/2Z4y//Z/RbLRZBIJbkOJE50Pn8TFMJ9SlXA1eVScbJcdZrnY0CgYAksdKcL7zeiD6I5ZTBdgmP+5hHLNEpdcC8BxdbEqRWYJCG6OVBo0rCc+dl2SCmo33Ad77B0wfgVFPL7P6KRw7qqWtYPSRWM6ix/5pUh7bRLcGOvCH54taEGEULYejOKljiW/9xtDIqEmVlKI+Zvxd6udnVIAjaftnbTf0zTgW9LwKBgCeEh/NCcyIz6qW+E/E7J8aHfrjvxJpLoNKtCZs+OcMjAXFWS3ADmPU0Ccc2t8UCHfZS80Di5cuZZ79RdMBtY/vPGO/92EbHq+ax6ZnhFU5ptSbUJNzeVx3J3dUwTT12XyaTykEGlFTy9AGmWPG371WY/v6pXQnEMwIi9WVszLoxAoGBANPpoTgXnqhP4op++IS4oGP0oJvE9Z3zCoeLkSwOZWX9rq2lIEeo5jA3eXMbwr0v8AJaqYAh0Jh0pgcKnUDafQ6MGw4BF8LnhtUj45tPdiurptXoKfsjmAjUE2dT0Q2a3d+yYu44WP/VAvDhcYscfuwRmYJs7bFeqy7AdH5GWyRz"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGGOu/xJTANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdxdWlzZWxsMB4XDTIzMDIxMDEwNDU0OFoXDTMzMDIxMDEwNDcyOFowEjEQMA4GA1UEAwwHcXVpc2VsbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKNFlNm/YNZ4JgghaIVX+WSwuYbyOMu4GuRdEbrMFqAw9rkqyBIV/s0Ya1i30fEzuNt6w/8cpZ8MBN6O0k4zkyPehjA7NTZH78r7WzEb6q4VJsUTvCmoFd6as+PgqQf/cgUz/KBz//Vs+V/SaV5xazdCprgun8WLzc8qBLICUaaTI8lPbsZ5pdA50lXGD9ivL1pEQrzHsLjZo9Jv/RtGGsAVK5GVIJMZ0qScp3EyTUTCmAJY8XFgRsPVQ/CcY2poKxLzOmHE+vdGw+M2JK/z6Lmdpy1u9/xZYb1Tp1UsdpCPtFBAxrF8v7FGq7mj1pNgYY9Nwr0Pbot/QWD2NoyhMgcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAXhoa3b1JPlIun69nyDYN9VM6j9b7UDBTBuRwm+1iiPxWYeQtVkWNpWleIUO7CF01xjAv5L09mHM+r73towewHWHOkhzbRN2QJ9q19ITyNBxNK6Fk+P0nRMs/mXg1GBAMGyyg+GaJOxHVTZOV085pEi0haWQl+7cItMHcQKI0RkA4R3FAjmx0P0gdz9J3KFK6rUVTPZbW+HXDQUY/g+JW7ecp9/pq3ebTr8XqFthkdgZ3Zx4iwHMbHmuD6xbJX8ZoKljxBmwi8Z59QQk5qG+ACraXc0Pn7gOx/dfhtrjWVR83sOs4jJpC2RoZM1L+JJLkClDfA6ysNCE1sRw4RDf81Q=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "138ea158-de36-41b6-809c-d00d58199d59",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "193d3153-5856-4d7b-9ccd-46a9be824f95"
          ],
          "secret": [
            "p7c387h3QdU1bXTsdRfgHw"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "1ccef21e-8ff8-4110-82c9-95fe02301330",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f8729e6a-b8e6-483a-bddc-ecd1e30e16a8",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "014ae20d-08db-46ee-90a3-87093a43939c",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c4074097-b227-451b-b301-7bd07b07729a",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "874ee733-e400-437e-90ce-6295b3dc236c",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d8001a2a-3731-4947-85d1-d1a12fd8d09b",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "613542aa-1a87-42fd-a6c6-bbbfb3663a46",
      "alias": "Quisell Browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "Quisell Browser forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "20d276b6-0a9f-4b01-bcde-6ee758afc34f",
      "alias": "Quisell Browser forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "3c92d685-0ada-4511-a67a-461ea71483b3",
      "alias": "Quisell Clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "f85ec97b-7446-4aca-b2bf-6431bd44bcbe",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "cd36b51a-ba98-4ebb-ad89-240c7af29ab8",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "fd8f6ca1-82b0-4d84-becd-4d9929ba249e",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "209c109d-2efc-41ad-9542-81960b9625c1",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "15a785b8-f629-4f4d-bc90-7008f5ebe35d",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d8fc2bf1-64da-488d-95b0-e627301da679",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "26ac834d-3285-44d1-b605-adf71ea2b1f9",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "1e9c78e7-77a9-4db1-8e18-d232667bf97d",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5189d583-6926-4a7c-bdcc-afad1d554f21",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "056cd468-0773-40fb-bcc2-7796fc94bdb2",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "1c0e33b8-bbfc-4a7c-94cc-fcec227aed64",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "9e66d95b-bf87-48a1-9270-74f5fc1446aa",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "56d3292a-32a2-4f96-949a-3a0916d62821",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "1042d590-f423-4b63-b849-5a3322055a49",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "495b10a1-e867-4bd9-a09b-d5dffda0fcae",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "644b0d57-ee28-455b-b49e-4838917fb497",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": false,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": false,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": false,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": false,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": false,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "Quisell Browser",
  "registrationFlow": "Quisell Browser",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "Quisell Clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "userProfileEnabled": "false",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "https://quisell.ru/auth/"
  },
  "keycloakVersion": "16.1.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}